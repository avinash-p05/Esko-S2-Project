:root{font-family:system-ui,Avenir,Helvetica,Arial,sans-serif;line-height:1.5;font-weight:400;color-scheme:light dark;color:#ffffffde;background-color:#242424;font-synthesis:none;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}a{font-weight:500;color:#646cff;text-decoration:inherit}a:hover{color:#535bf2}body{margin:0;display:flex;place-items:center;min-width:320px;min-height:100vh}h1{font-size:3.2em;line-height:1.1}button{border-radius:8px;border:1px solid transparent;padding:.6em 1.2em;font-size:1em;font-weight:500;font-family:inherit;background-color:#1a1a1a;cursor:pointer;transition:border-color .25s}button:hover{border-color:#646cff}button:focus,button:focus-visible{outline:4px auto -webkit-focus-ring-color}@media (prefers-color-scheme: light){:root{color:#213547;background-color:#fff}a:hover{color:#747bff}button{background-color:#f9f9f9}}.upload-button-container{position:fixed;bottom:24px;right:24px;display:flex;flex-direction:column;align-items:flex-end}.status-box{background-color:#fff;padding:8px;margin-bottom:8px;border-radius:4px;box-shadow:0 2px 4px #0000001a;font-size:14px}.button-group{display:flex;align-items:center}.file-name{margin-right:8px;font-size:14px;background-color:#f3f4f6;padding:4px 8px;border-radius:4px}.select-file-button{background-color:#e5e7eb;color:#4b5563;padding:8px 12px;border:none;border-radius:4px 0 0 4px;cursor:pointer}.select-file-button:hover{background-color:#d1d5db}.upload-button{background-color:#2563eb;color:#fff;padding:8px 16px;border:none;border-radius:0 4px 4px 0;cursor:pointer}.upload-button:hover{background-color:#1d4ed8}.upload-button.disabled{background-color:#93c5fd;cursor:not-allowed}.document-grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(200px,1fr));gap:16px;margin-top:16px}.document-card{background-color:#fff;border-radius:8px;overflow:hidden;box-shadow:0 2px 4px #0000001a;transition:transform .2s ease-in-out,box-shadow .2s ease-in-out;height:100%;display:flex;flex-direction:column}.document-card:hover{transform:translateY(-4px);box-shadow:0 4px 8px #00000026}.document-thumbnail{height:150px;background-color:#f5f5f5;display:flex;align-items:center;justify-content:center;overflow:hidden}.thumbnail-image{width:100%;height:100%;object-fit:contain}.no-thumbnail{color:#9ca3af;font-size:14px}.document-info{padding:12px;display:flex;flex-direction:column;flex-grow:1}.document-name{font-size:14px;font-weight:500;color:#111827;margin-bottom:8px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.download-button{background-color:#2563eb;color:#fff;border:none;border-radius:4px;padding:6px 12px;font-size:12px;cursor:pointer;margin-top:auto;transition:background-color .2s}.download-button:hover{background-color:#1d4ed8}.download-button:disabled{background-color:#93c5fd;cursor:not-allowed}.approve-button{background-color:#aeb913;color:#fff;border:none;margin-bottom:10px;border-radius:4px;padding:6px 12px;font-size:12px;cursor:pointer;margin-top:auto;transition:background-color .2s}.approve-button:hover{background-color:#7c8508}.approve-button:disabled{background-color:#93c5fd;cursor:not-allowed}.loading-message,.no-documents-message{color:#6b7280;text-align:center;padding:24px;font-size:16px}// components/AddUserModal.jsx import React,{useState}from "react"; import "./AddUserModal.css"; const AddUserModal = ({isOpen,onClose,onUserAdded}) =>{const [userType,setUserType] = useState("internal");const [email,setEmail] = useState("");const [firstName,setFirstName] = useState("");const [lastName,setLastName] = useState("");const [function_,setFunction] = useState("");const [initials,setInitials] = useState("");const [telephone,setTelephone] = useState("");const [partner,setPartner] = useState("");const [isSubmitting,setIsSubmitting] = useState(false);// Reset form state when modal opens React.useEffect(() => {if (isOpen) {setUserType("internal"); setEmail(""); setFirstName(""); setLastName(""); setFunction(""); setInitials(""); setTelephone(""); setPartner(""); setIsSubmitting(false);}},[isOpen]);// Validate form based on required fields const isFormValid = () =>{return email.trim() !== "" && firstName.trim() !== "" && lastName.trim() !== ""}// Handle create user action const handleCreateUser = async () =>{if (!isFormValid()) return;setIsSubmitting(true);try{const userData ={email,firstName,lastName,function: function_,initials,telephone: telephone,userType: userType === "internal" ? "internal" : "external",// Additional fields can be added here}// Call parent handler with user data await onUserAdded(userData);onClose()}catch (error){console.error("Error creating user:",error);// Could add error handling UI here}finally{setIsSubmitting(false)}}if (!isOpen) return null;return (<div className="modal-overlay"> <div className="add-user-modal"> <div className="modal-header"> <h2>Add New User</h2> <button className="close-button" onClick={onClose}>×</button> </div> <div className="modal-body"> {} <div className="form-group"> <label>Type</label> <div className="radio-group"> <label className="radio-label"> <input type="radio" name="userType" value="internal" checked={userType === "internal"} onChange={() => setUserType("internal")} /> Internal </label> <label className="radio-label"> <input type="radio" name="userType" value="external" checked={userType === "external"} onChange={() => setUserType("external")} /> External </label> </div> </div> {} <div className="form-group"> <label htmlFor="email"> <span className="required">*</span> E-mail Address </label> <input id="email" type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="you@example.com" required /> </div> {} <div className="form-row"> <div className="form-group half"> <label htmlFor="firstName"> <span className="required">*</span> First Name </label> <input id="firstName" type="text" value={firstName} onChange={(e) => setFirstName(e.target.value)} placeholder="First Name" required /> </div> <div className="form-group half"> <label htmlFor="lastName"> <span className="required">*</span> Last Name </label> <input id="lastName" type="text" value={lastName} onChange={(e) => setLastName(e.target.value)} placeholder="Last Name" required /> </div> </div> {} <div className="form-row"> <div className="form-group half"> <label htmlFor="function">Function</label> <input id="function" type="text" value={function_} onChange={(e) => setFunction(e.target.value)} placeholder="Function" /> </div> <div className="form-group half"> <label htmlFor="initials">Initials</label> <input id="initials" type="text" value={initials} onChange={(e) => setInitials(e.target.value)} placeholder="Initials" /> </div> </div> {} <div className="form-group"> <label htmlFor="telephone">Telephone Number</label> <input id="telephone" type="tel" value={telephone} onChange={(e) => setTelephone(e.target.value)} placeholder="Telephone Number" /> </div> {} {userType === "external" && (<div className="form-group"> <label htmlFor="partner">Partner</label> <div className="partner-select-container"> <input id="partner" type="text" value={partner} onChange={(e) => setPartner(e.target.value)} placeholder="Start typing to search for a partner" className="partner-input" /> <span className="dropdown-arrow">▼</span> </div> </div>)} </div> <div className="modal-footer"> <button className="cancel-button" onClick={onClose}> Cancel </button> <button className="create-button" onClick={handleCreateUser} disabled={!isFormValid() || isSubmitting} > {isSubmitting ? "Creating..." : "Create"} </button> </div> </div> </div>)}; export default AddUserModal; .approval-modal-overlay{position:fixed;top:0;left:0;right:0;bottom:0;background-color:#00000080;display:flex;justify-content:center;align-items:center;z-index:1000}.approval-modal{background-color:#fff;border-radius:4px;width:90%;max-width:700px;max-height:90vh;overflow-y:auto;box-shadow:0 2px 10px #0003;display:flex;flex-direction:column}.approval-modal-header{display:flex;justify-content:space-between;align-items:center;padding:16px 20px;border-bottom:1px solid #e0e0e0}.approval-modal-header h2{margin:0;font-size:18px;color:#333}.close-button{background:none;border:none;font-size:24px;cursor:pointer;color:#999}.approval-modal-body{padding:20px;flex-grow:1;display:flex;flex-direction:column;gap:20px}.approval-setup,.add-approvers,.notification-scheme,.message,.due-date{display:flex;flex-direction:column;gap:8px}.approval-setup label,.add-approvers label,.notification-scheme label,.message label,.due-date label{font-weight:500;color:#333}.required{color:red}select,textarea{padding:8px 12px;border:1px solid #ccc;border-radius:4px;font-size:14px}textarea{min-height:100px;resize:vertical}.selected-approvers{display:flex;flex-wrap:wrap;gap:8px;margin-bottom:12px}.selected-approver{display:flex;align-items:center;gap:8px;background-color:#f0f0f0;padding:6px 10px;border-radius:4px;font-size:14px}.selected-approver button{background:none;border:none;cursor:pointer;color:#666;font-size:16px;padding:0}.user-icon-placeholder{width:24px;height:24px;border-radius:50%;background-color:#aeb913;color:#fff;display:flex;align-items:center;justify-content:center;font-size:12px;font-weight:700}.approver-actions{display:flex;gap:10px;align-items:center}.approver-dropdown{flex:1}.approver-dropdown select{width:100%}.add-external-button{background-color:#f3f4f6;color:#374151;border:1px solid #d1d5db;border-radius:4px;padding:8px 16px;font-size:14px;cursor:pointer;transition:background-color .2s}.add-external-button:hover{background-color:#e5e7eb}.date-time-picker{display:flex;gap:16px}.date-picker,.time-picker{display:flex;flex-direction:column;gap:4px}.date-picker{flex:3}.time-picker{flex:2}.approval-modal-footer{display:flex;justify-content:flex-end;gap:12px;padding:16px 20px;border-top:1px solid #e0e0e0}.cancel-button,.submit-button{padding:8px 16px;border-radius:4px;font-weight:500;cursor:pointer}.cancel-button{background-color:#f0f0f0;border:1px solid #ddd;color:#333}.submit-button{background-color:#c0c840;border:1px solid #a6ad33;color:#fff}.submit-button:disabled,.cancel-button:disabled{opacity:.6;cursor:not-allowed}.app-container{min-height:100vh;background-color:#f9fafb;padding:24px;font-family:Arial,sans-serif}.app-title{font-size:24px;font-weight:700;margin-bottom:24px;color:#111827}.document-container{background-color:#fff;border-radius:8px;box-shadow:0 1px 3px #0000001a;padding:24px;min-height:400px}.header-row{display:flex;justify-content:space-between;align-items:center;margin-bottom:16px}.section-title{font-size:20px;margin:0;color:#111827}.refresh-button{background-color:#f3f4f6;color:#374151;border:none;border-radius:4px;padding:8px 16px;font-size:14px;cursor:pointer;transition:background-color .2s}.refresh-button:hover{background-color:#e5e7eb}.refresh-button:disabled{opacity:.6;cursor:not-allowed}.error-message{background-color:#fee2e2;color:#b91c1c;padding:12px;border-radius:6px;margin-bottom:16px;font-size:14px}.no-documents-message,.placeholder-message{color:#6b7280;text-align:center;padding:24px}body{margin:0;min-width:320px;min-height:100vh;display:block;place-items:initial;color:#111827;background-color:#f9fafb}button{border-radius:4px;font-size:14px;transition:all .2s;background-color:transparent}button:focus,button:focus-visible{outline:2px solid #3b82f6}
